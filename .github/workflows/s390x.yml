name: s390x

on:
  workflow_dispatch:
  schedule:
    # Run every Monday at 6am UTC
    - cron: '0 6 * * 1'
  pull_request:
    # We also want this workflow triggered if the `s390x` label is
    # added or present when PR is updated
    types:
      - synchronize
      - labeled
  push:
    branches:
      - '*.*.x'
    tags:
      - '*'

jobs:
  pytest:
    name: Python 3.8
    runs-on: ubuntu-18.04
    if: (github.repository == 'asdf-format/asdf' && (github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 's390x')))
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - uses: uraimo/run-on-arch-action@v2.2.0
        id: build
        with:
          arch: s390x
          distro: bullseye
          shell: /bin/bash
          install: |
            echo "deb http://deb.debian.org/debian bullseye-backports main" >> /etc/apt/sources.list
            apt-get update -q -y
            apt-get install -q -y git \
                                  g++ \
                                  pkg-config \
                                  python3 \
                                  python3-configobj \
                                  python3-astropy \
                                  python3-lz4 \
                                  python3-numpy \
                                  python3-ply \
                                  python3-venv \
                                  python3-wheel \
                                  cython3 \
                                  libwcs7/bullseye-backports \
                                  wcslib-dev/bullseye-backports \
                                  libcfitsio-dev \
                                  liberfa1
          run: |
            python3 -m venv --system-site-packages tests
            source tests/bin/activate
            pip3 install --upgrade pip setuptools gwcs pytest pytest-doctestplus
            pip3 install -e .[all,tests]
            python3 -m pytest --remote-data
