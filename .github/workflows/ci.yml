name: CI

on:
  workflow_dispatch:
  schedule:
    # Run every Monday at 6am UTC
    - cron: '0 6 * * 1'
  push:
    branches:
      - master
      - stable
      - '*.x'
    tags:
      - '*'
  pull_request:

jobs:
  lint:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Code style checks
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: codestyle
    steps:
      - name: Install System Packages
        if: ${{ contains(matrix.toxenv,'docbuild') }}
        run: |
          sudo apt update -y
          sudo apt-get install graphviz texlive-latex-extra dvipng
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore cached tox installation
        uses: actions/cache@v3
        id: tox_cache
        with:
          path: ${{ env.pythonLocation }}
          key: tox-install-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - name: Install tox
        if: steps.tox_cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Restore cached tox environment
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.toxenv }}-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}
      - name: Upload coverage to codecov
        if: ${{ contains(matrix.toxenv,'coverage') }}
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml

  test:
    name: ${{ matrix.name }}
    needs: [ lint ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Python 3.10 Testing
            os: ubuntu-latest
            python-version: "3.10"
            toxenv: py310

          - name: Python 3.9 with Code Coverage
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: coverage

          - name: Python 3.8 Testing
            os: ubuntu-latest
            python-version: "3.8"
            toxenv: py38

          - name: Python 3.8 with legacy packages
            os: ubuntu-latest
            python-version: "3.8"
            toxenv: py38-legacy

          - name: Mac OS Latest
            os: macos-latest
            python-version: "3.9"
            toxenv: py39

          - name: Compatibility
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: compatibility

          - name: Astropy Dev
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: py39-astropydev

          - name: ASDF-Astropy Dev
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: py39-asdfastropydev

          - name: GWCS Dev
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: py39-gwcsdev

          - name: Numpy Dev
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: py39-numpydev

          - name: ASDF-Standard Dev
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: py39-asdfstandarddev

          - name: ASDF-Transform-Schemas Dev
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: py39-asdftransformschemasdev

          - name: ASDF-WCS-Schemas Dev
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: py39-asdfwcsschemasdev

          - name: ASDF-Coordinates-Schemas Dev
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: py39-asdfcoordinatesschemasdev

          - name: Pre-Release Dependencies
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: prerelease

          - name: Test Against Installed Package
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: packaged

          - name: Warnings Treated as Exceptions
            os: ubuntu-latest
            python-version: "3.10"
            toxenv: warnings

          - name: Windows
            os: windows-latest
            python-version: "3.9"
            toxenv: py39
    steps:
      - name: Install System Packages
        if: ${{ contains(matrix.toxenv,'docbuild') }}
        run: |
          sudo apt update -y
          sudo apt-get install graphviz texlive-latex-extra dvipng
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore cached tox installation
        uses: actions/cache@v3
        id: tox_cache
        with:
          path: ${{ env.pythonLocation }}
          key: tox-install-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - name: Install tox
        if: steps.tox_cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Restore cached tox environment
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.toxenv }}-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}
      - name: Upload coverage to codecov
        if: ${{ contains(matrix.toxenv,'coverage') }}
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml

  asdf-standard:
    name: Run asdf-standard tests
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout asdf
        uses: actions/checkout@v2
        with:
          path: asdf
      - name: Checkout asdf-standard
        uses: actions/checkout@v2
        with:
          repository: asdf-format/asdf-standard
          ref: master
          path: asdf-standard
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install asdf
        run: cd asdf && pip install .
      - name: Install asdf-standard
        run: cd asdf-standard && pip install -e .[test]
      - name: Pip Freeze
        run: pip freeze
      - name: Run asdf-standard tests
        run: cd asdf-standard && pytest

  build:
    name: ${{ matrix.name }}
    needs: [ test, asdf-standard ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Build Documents
            python-version: "3.9"
            os: ubuntu-latest
            toxenv: docbuild

          - name: Twine
            os: ubuntu-latest
            python-version: "3.9"
            toxenv: twine
    steps:
      - name: Install System Packages
        if: ${{ contains(matrix.toxenv,'docbuild') }}
        run: |
          sudo apt update -y
          sudo apt-get install graphviz texlive-latex-extra dvipng
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore cached tox installation
        uses: actions/cache@v3
        id: tox_cache
        with:
          path: ${{ env.pythonLocation }}
          key: tox-install-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - name: Install tox
        if: steps.tox_cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Restore cached tox environment
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.toxenv }}-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}
      - name: Upload coverage to codecov
        if: ${{ contains(matrix.toxenv,'coverage') }}
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
