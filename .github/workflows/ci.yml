name: CI

on:
  workflow_dispatch:
  schedule:
    # Run every Monday at 6am UTC
    - cron: '0 6 * * 1'
  push:
    branches:
      - master
      - stable
      - '*.x'
    tags:
      - '*'
  pull_request:

jobs:
  core:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      submodules: false
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.10'
      envs: |
        - linux: coverage
          name: Python 3.11 coverage
          python-version: 3.11
        - linux: coverage
          name: Python 3.10 coverage
          python-version: 3.10
        - linux: coverage
          name: Python 3.9 coverage
          python-version: 3.9
        - linux: coverage
          name: Python 3.8 coverage
          python-version: 3.8
      coverage: codecov

  test:
    needs: [core, asdf-schemas]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      submodules: false
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - macos: py39
        - windows: py39

  dev:
    needs: [core, asdf-schemas]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      submodules: false
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: py38-devdeps
        - linux: py39-devdeps
        - linux: py310-devdeps
        - linux: py311-devdeps

  compatibility:
    needs: [core, asdf-schemas]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      submodules: false
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: compatibility

  package:
    needs: [test, dev, compatibility]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/publish_pure_python.yml@v1
    with:
      upload_to_pypi: false
      upload_to_anaconda: false
      test_extras: tests
      test_command: pytest --pyargs asdf

  asdf-schemas:
    name: ${{ matrix.package_name }} tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - package_name: asdf-standard
            repository: asdf-format/asdf-standard
            ref: main
            install_command: pip install -e .[test]
            test_command: pytest
          - package_name: asdf-transform-schemas
            repository: asdf-format/asdf-transform-schemas
            ref: main
            install_command: pip install -e .[test]
            test_command: pytest
          - package_name: asdf-unit-schemas
            repository: asdf-format/asdf-unit-schemas
            ref: main
            install_command: pip install -e .[test]
            test_command: pytest
    steps:
      - name: Checkout asdf
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          path: asdf
      - name: Checkout ${{ matrix.package_name }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: ${{ matrix.repository }}
          ref: ${{ matrix.ref }}
          path: target
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install asdf
        run: cd asdf && pip install .
      - name: Install remaining ${{ matrix.package_name }} dependencies
        run: cd target && ${{ matrix.install_command }}
      - name: Pip Freeze
        run: pip freeze
      - name: Run ${{ matrix.package_name}} tests
        run: cd target && ${{ matrix.test_command }}
