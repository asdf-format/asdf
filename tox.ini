[tox]
envlist= py39,flake8

[testenv]
deps=
    pytest-sugar
    astropydev: git+https://github.com/astropy/astropy
    gwcsdev: git+https://github.com/spacetelescope/gwcs
    numpydev: git+https://github.com/numpy/numpy
    asdfastropydev: git+https://github.com/astropy/asdf-astropy
    asdfstandarddev: git+https://github.com/asdf-format/asdf-standard
    asdftransformschemasdev: git+https://github.com/asdf-format/asdf-transform-schemas
    asdfwcsschemasdev: git+https://github.com/asdf-format/asdf-wcs-schemas
    asdfcoordinatesschemasdev: git+https://github.com/asdf-format/asdf-coordinates-schemas
    # Newer versions of gwcs require astropy 4.x, which
    # isn't compatible with the older versions of numpy
    # that we test with.
    legacy: gwcs==0.9.1
    legacy: semantic_version==2.8
    legacy: pyyaml==3.13
    legacy: jsonschema==3.0.2
    legacy: numpy~=1.14.6
    legacy: pytest~=4.6.11
    legacy: astropy~=3.0.0
    numpydev,s390x: cython
    oldestdeps: jmespath==0.6.2
    oldestdeps: jsonschema==3.0.2
    oldestdeps: numpy~=1.19.0
    oldestdeps: pyyaml==3.10
    oldestdeps: semantic_version==2.8

extras= all,tests
# astropy will complain if the home directory is missing
passenv= HOME
usedevelop= true
commands=
    pytest --remote-data

[testenv:prerelease]
pip_pre= true

[testenv:warnings]
commands=
    pytest --remote-data -W error \
      -p no:unraisableexception \
      -W 'ignore:numpy.ndarray size changed:astropy.utils.exceptions.AstropyWarning' \
      -W 'ignore:numpy.ndarray size changed:RuntimeWarning'

[testenv:packaged]
# The default tox working directory is in .tox in the source directory.  If we
# execute pytest from there, it will discover tox.ini in the source directory
# and load the asdf module from the unpackaged sourcee, which is not what we
# want.  The home directory does not have a tox.ini in any of its ancestors,
# so this will allow us to test the installed package.
usedevelop= false
changedir= {homedir}
commands=
    pytest --pyargs asdf --remote-data

[testenv:twine]
usedevelop= false
deps=
    twine
commands=
    twine check {distdir}/*

[testenv:docs]
extras= docs
commands=
    sphinx-build -W docs build/docs

[testenv:flake8]
deps=
    flake8
commands=
    flake8 --count

[testenv:coverage]
deps=
    codecov
    coverage
commands=
    coverage run --source=asdf --rcfile={toxinidir}/asdf/tests/coveragerc \
                 -m pytest --remote-data --open-files
    coverage report -m
    codecov -e TOXENV
passenv= TOXENV CI CODECOV_* DISPLAY HOME

[testenv:compatibility]
deps=
    virtualenv
extras= all,tests
commands=
    pytest compatibility_tests/ --remote-data

[testenv:bandit]
deps=
    bandit
commands=
    bandit -r -x asdf/tests,asdf/commands/tests,asdf/tags/core/tests,asdf/extern,asdf/core/tests,asdf/core/_converters/tests asdf
