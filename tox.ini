[tox]
envlist= py38,py39,py39
isolated_build = True

[testenv]
setenv =
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/scipy-wheels-nightly/simple
deps=
    devdeps: -rrequirements-dev.txt
    numpydev: cython
    oldestdeps: minimum_dependencies
extras= all,tests
# astropy will complain if the home directory is missing
passenv= HOME
usedevelop= true
commands_pre=
    python -m pip install --upgrade pip

    # Generate `requiremments-min.txt`
    oldestdeps: minimum_dependencies asdf --filename {envtmpdir}/requirements-min.txt
    # Force install everything from `requirements-min.txt`
    oldestdeps: pip install -r {envtmpdir}/requirements-min.txt

    pip freeze
commands=
    pytest --remote-data

# coverage run must be used because the pytest-asdf plugin will interfere
# with proper coverage measurement due to the order pytest loads its
# entry points.
[testenv:coverage]
deps=
    coverage
commands=
    pip freeze
    coverage run --source=asdf --rcfile={toxinidir}/pyproject.toml \
                     -m pytest --remote-data --open-files
    coverage xml -o {toxinidir}/coverage.xml

[testenv:compatibility]
deps=
    virtualenv
extras= all,tests
commands=
    pip freeze
    pytest compatibility_tests/ --remote-data

[testenv:asdf-standard]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/asdf-format/asdf-standard.git
    pip install -e asdf-standard[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest asdf-standard

[testenv:asdf-transform-schemas]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/asdf-format/asdf-transform-schemas.git
    pip install -e asdf-transform-schemas[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest asdf-transform-schemas

[testenv:asdf-unit-schemas]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/asdf-format/asdf-unit-schemas.git
    pip install -e asdf-unit-schemas[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest asdf-unit-schemas

[testenv:asdf-wcs-schemas]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/asdf-format/asdf-wcs-schemas.git
    pip install -e asdf-wcs-schemas[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest asdf-wcs-schemas

[testenv:asdf-coordinates-schemas]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/asdf-format/asdf-coordinates-schemas.git
    pip install -e asdf-coordinates-schemas[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest asdf-coordinates-schemas

[testenv:astropy]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/astropy/astropy.git
    pip install -e astropy[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest astropy/astropy/io/misc/asdf --open-files --run-slow --remote-data \
        -W "ignore::asdf.exceptions.AsdfDeprecationWarning:asdf.types"

[testenv:asdf-astropy]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/astropy/asdf-astropy.git
    pip install -e asdf-astropy[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest asdf-astropy

[testenv:specutils]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/astropy/specutils.git
    pip install -e specutils[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest specutils \
        -W "ignore::asdf.exceptions.AsdfDeprecationWarning:asdf.types"

[testenv:gwcs]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/spacetelescope/gwcs.git
    pip install -e gwcs[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest gwcs

[testenv:jwst]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
setenv=
    CRDS_SERVER_URL = https://jwst-crds.stsci.edu
    CRDS_PATH = /tmp/crds_cache
    CRDS_CLIENT_RETRY_COUNT = 3
    CRDS_CLIENT_RETRY_DELAY_SECONDS = 20
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/spacetelescope/jwst.git
    pip install -e jwst[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest jwst

[testenv:stdatamodels]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
setenv=
    CRDS_SERVER_URL = https://jwst-crds.stsci.edu
    CRDS_PATH = /tmp/crds_cache
    CRDS_CLIENT_RETRY_COUNT = 3
    CRDS_CLIENT_RETRY_DELAY_SECONDS = 20
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/spacetelescope/stdatamodels.git
    pip install -e stdatamodels[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest stdatamodels

[testenv:roman_datamodels]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/spacetelescope/roman_datamodels.git
    pip install -e roman_datamodels[test]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest roman_datamodels/tests

[testenv:weldx]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/BAMWelDX/weldx.git
    pip install -e weldx[test,media]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest weldx/weldx/tests/asdf_tests weldx/weldx/schemas --asdf-tests

[testenv:sunpy]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/sunpy/sunpy.git
    pip install -e sunpy[tests,all]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest sunpy/sunpy/io

[testenv:dkist]
changedir={envtmpdir}
allowlist_externals=
    git
    bash
extras=
commands_pre=
    bash -c "pip freeze -q | grep 'asdf @' > {envtmpdir}/requirements.txt"
    git clone https://github.com/DKISTDC/dkist.git
    pip install -e dkist[tests]
    pip install -r {envtmpdir}/requirements.txt
    pip freeze
commands=
    pytest dkist
